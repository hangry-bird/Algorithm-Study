function solution(numbers, hand) {
    const numberCoordinates = {
        1: [0, 0], 2: [0, 1], 3: [0, 2],
        4: [1, 0], 5: [1, 1], 6: [1, 2],
        7: [2, 0], 8: [2, 1], 9: [2, 2],
        '*': [3, 0], 0: [3, 1], '#': [3, 2]
    }

    var answer = '';
    
    let currentLeftFingerPosition = '*';
    let currentRightFingerPosition = '#';
    
    const leftFingerPress = (num) => {
        currentLeftFingerPosition = num;
        answer += "L"
    }
    const rightFingerPress = (num) => {
        currentRightFingerPosition = num;
        answer += "R"
    }
    
    for(let i = 0; i < numbers.length; i++){
        const num = numbers[i];
        switch(num){
            case 1: case 4: case 7: 
                leftFingerPress(num); 
            break;
            case 3: case 6: case 9: 
                rightFingerPress(num); 
            break;
            case 2: case 5: case 8: case 0:
                const 눌러야_될_좌표 = numberCoordinates[num];
                const 왼손가락_좌표 = numberCoordinates[currentLeftFingerPosition]
                const 오른손가락_좌표 = numberCoordinates[currentRightFingerPosition]
                
                const 누를번호_왼손의거리 = Math.abs(눌러야_될_좌표[0] - 왼손가락_좌표[0]) + Math.abs(눌러야_될_좌표[1] - 왼손가락_좌표[1])
                const 누를번호_오른손의거리 = Math.abs(눌러야_될_좌표[0] - 오른손가락_좌표[0]) + Math.abs(눌러야_될_좌표[1] - 오른손가락_좌표[1])
                // 오른손이 더 가까움
                if(누를번호_왼손의거리 > 누를번호_오른손의거리){
                    rightFingerPress(num);
                }
                // 왼손이 더 가까움
                else if(누를번호_왼손의거리 < 누를번호_오른손의거리){
                    leftFingerPress(num);
                }
                // 만약 같다면?
                else {
                    if(hand === "right"){
                        rightFingerPress(num);
                    }
                    else{
                        leftFingerPress(num);
                    }
                }
            break;
        }
    }
    
    return answer;
}
